{"version":3,"sources":["../../src/util/dom.js"],"names":["Rect","findAncestor","callback","node","current","HTMLElement","parentNode","getBorders","style","getComputedStyle","top","parseInt","borderTopWidth","right","borderRightWidth","bottom","borderBottomWidth","left","borderLeftWidth","getClippingBlock","result","document","documentElement","overflow","Error","getContainingBlock","position","getContentRect","rect","getBoundingClientRect","border","Math","min","width","clientWidth","height","clientHeight","getViewportRect","window","innerWidth","innerHeight"],"mappings":"AAEA,SAAQA,IAAR,QAAmB,cAAnB;AAGA,OAAO,SAASC,YAAT,CACLC,QADK,EAELC,IAFK,EAGe;AACpB,MAAIC,UAAUD,IAAd;;AAEA,SAAOC,mBAAmBC,WAA1B,EAAuC;AACrC,QAAIH,SAASE,OAAT,CAAJ,EAAuB;AACrB,aAAOA,OAAP;AACD;;AAEDA,cAAUA,QAAQE,UAAlB;AACD;;AAED,SAAO,IAAP;AACD;AAED,OAAO,SAASC,UAAT,CAAoBJ,IAApB,EAAgD;AACrD,MAAMK,QAAQC,iBAAiBN,IAAjB,CAAd;AAEA,MAAMO,MAAMC,SAASH,MAAMI,cAAf,EAA+B,EAA/B,CAAZ;AACA,MAAMC,QAAQF,SAASH,MAAMM,gBAAf,EAAiC,EAAjC,CAAd;AACA,MAAMC,SAASJ,SAASH,MAAMQ,iBAAf,EAAkC,EAAlC,CAAf;AACA,MAAMC,OAAON,SAASH,MAAMU,eAAf,EAAgC,EAAhC,CAAb;AAEA,SAAO;AAACR,YAAD;AAAMG,gBAAN;AAAaE,kBAAb;AAAqBE;AAArB,GAAP;AACD;AAED,OAAO,SAASE,gBAAT,CAA0BhB,IAA1B,EAAoD;AACzD,MAAMiB,SAASnB,aAAa,UAACE,IAAD,EAAU;AACpC,QAAIA,SAASkB,SAASC,eAAtB,EAAuC,OAAO,IAAP;AAEvC,QAAMd,QAAQC,iBAAiBN,IAAjB,CAAd;AAEA,WAAOK,MAAMe,QAAN,IAAkBf,MAAMe,QAAN,KAAmB,SAA5C;AACD,GANc,EAMZpB,IANY,CAAf;AAQA,MAAIiB,MAAJ,EAAY,OAAOA,MAAP;AACZ,MAAIC,SAASC,eAAT,KAA6B,IAAjC,EAAuC,OAAOD,SAASC,eAAhB;AAEvC,QAAM,IAAIE,KAAJ,CAAU,kCAAV,CAAN;AACD;AAED,OAAO,SAASC,kBAAT,CAA4BtB,IAA5B,EAAsD;AAC3D,MAAMiB,SAASnB,aAAa,UAACE,IAAD,EAAU;AACpC,QAAIA,SAASkB,SAASC,eAAtB,EAAuC,OAAO,IAAP;AAEvC,QAAMd,QAAQC,iBAAiBN,IAAjB,CAAd;AAEA,WAAOK,MAAMkB,QAAN,IAAkBlB,MAAMkB,QAAN,KAAmB,QAA5C;AACD,GANc,EAMZvB,IANY,CAAf;AAQA,MAAIiB,MAAJ,EAAY,OAAOA,MAAP;AACZ,MAAIC,SAASC,eAAT,KAA6B,IAAjC,EAAuC,OAAOD,SAASC,eAAhB;AAEvC,QAAM,IAAIE,KAAJ,CAAU,kCAAV,CAAN;AACD;AAED,OAAO,SAASG,cAAT,CAAwBxB,IAAxB,EAAiD;AACtD,MAAMyB,OAAOzB,KAAK0B,qBAAL,EAAb;AACA,MAAMC,SAASvB,WAAWJ,IAAX,CAAf;AAEA,SAAO,IAAIH,IAAJ,CACL4B,KAAKX,IAAL,GAAYa,OAAOb,IAAnB,IAA2B,CADtB,EAELW,KAAKlB,GAAL,GAAWoB,OAAOpB,GAAlB,IAAyB,CAFpB,EAGLqB,KAAKC,GAAL,CAASJ,KAAKK,KAAL,GAAaH,OAAOb,IAApB,GAA2Ba,OAAOjB,KAA3C,EAAkDV,KAAK+B,WAAvD,KAAuE,CAHlE,EAILH,KAAKC,GAAL,CAASJ,KAAKO,MAAL,GAAcL,OAAOpB,GAArB,GAA2BoB,OAAOf,MAA3C,EAAmDZ,KAAKiC,YAAxD,KAAyE,CAJpE,CAAP;AAMD;AAED,OAAO,SAASC,eAAT,GAAiC;AACtC,SAAO,IAAIrC,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAesC,OAAOC,UAAtB,EAAkCD,OAAOE,WAAzC,CAAP;AACD","sourcesContent":["// @flow\n\nimport {Rect} from 'flowtip-core';\nimport type {Borders} from '../types';\n\nexport function findAncestor(\n  callback: (node: HTMLElement) => boolean,\n  node: ?Node,\n): HTMLElement | null {\n  let current = node;\n\n  while (current instanceof HTMLElement) {\n    if (callback(current)) {\n      return current;\n    }\n\n    current = current.parentNode;\n  }\n\n  return null;\n}\n\nexport function getBorders(node: HTMLElement): Borders {\n  const style = getComputedStyle(node);\n\n  const top = parseInt(style.borderTopWidth, 10);\n  const right = parseInt(style.borderRightWidth, 10);\n  const bottom = parseInt(style.borderBottomWidth, 10);\n  const left = parseInt(style.borderLeftWidth, 10);\n\n  return {top, right, bottom, left};\n}\n\nexport function getClippingBlock(node: ?Node): HTMLElement {\n  const result = findAncestor((node) => {\n    if (node === document.documentElement) return true;\n\n    const style = getComputedStyle(node);\n\n    return style.overflow && style.overflow !== 'visible';\n  }, node);\n\n  if (result) return result;\n  if (document.documentElement !== null) return document.documentElement;\n\n  throw new Error('document.documentElement is null');\n}\n\nexport function getContainingBlock(node: ?Node): HTMLElement {\n  const result = findAncestor((node) => {\n    if (node === document.documentElement) return true;\n\n    const style = getComputedStyle(node);\n\n    return style.position && style.position !== 'static';\n  }, node);\n\n  if (result) return result;\n  if (document.documentElement !== null) return document.documentElement;\n\n  throw new Error('document.documentElement is null');\n}\n\nexport function getContentRect(node: HTMLElement): Rect {\n  const rect = node.getBoundingClientRect();\n  const border = getBorders(node);\n\n  return new Rect(\n    rect.left + border.left || 0,\n    rect.top + border.top || 0,\n    Math.min(rect.width - border.left - border.right, node.clientWidth) || 0,\n    Math.min(rect.height - border.top - border.bottom, node.clientHeight) || 0,\n  );\n}\n\nexport function getViewportRect(): Rect {\n  return new Rect(0, 0, window.innerWidth, window.innerHeight);\n}\n"],"file":"dom.js"}