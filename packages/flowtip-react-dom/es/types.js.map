{"version":3,"sources":["../src/types.js"],"names":["React"],"mappings":"AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB","sourcesContent":["// @flow\n\nimport * as React from 'react';\nimport type {\n  Rect,\n  RectLike,\n  Region,\n  Align,\n  Dimensions,\n  Result,\n} from 'flowtip-core';\n\nexport type Style = {[string]: string | number};\n\nexport type Borders = {\n  top: number,\n  left: number,\n  right: number,\n  bottom: number,\n};\n\nexport type ContentProps = {\n  style: Style,\n  result: Result,\n  children: React.Node,\n};\n\nexport type TailProps = {\n  style: Style,\n  result: Result,\n  children: React.Node,\n};\n\nexport type RenderProps = {\n  onContentSize(Dimensions): mixed,\n  onTailSize(Dimensions): mixed,\n  // eslint-disable-next-line no-use-before-define\n  state: State,\n  // eslint-disable-next-line no-use-before-define\n  props: Props,\n};\n\nexport type Render = (RenderProps) => React.Node;\n\nexport type Props = {\n  /** DOMRect (or similar shaped object) of target position. */\n  target: RectLike | null,\n  /**\n    DOMRect (or similar shaped object) of content boundary.\n   */\n  bounds: RectLike | null,\n  /** Default region the content should unless otherwise constrained. */\n  region: Region | void,\n  /** Retain the previous rendered region unless otherwise constrained. */\n  sticky: boolean,\n  /** Offset between target rect and tail. */\n  targetOffset: number,\n  /** Minimum distance between content react and boundary edge. */\n  edgeOffset?: number,\n  /**\n   * Prevent the tail from getting within this distance of the corner of\n   * the content.\n   */\n  tailOffset: number,\n  /** Relative alignment of content rect and target rect. */\n  align: Align,\n  /** Disable the top region. */\n  topDisabled: boolean,\n  /** Disable the right region. */\n  rightDisabled: boolean,\n  /** Disable the bottom region. */\n  bottomDisabled: boolean,\n  /** Disable the left region. */\n  leftDisabled: boolean,\n  /** Constrain the content at the top boundary. */\n  constrainTop: boolean,\n  /** Constrain the content at the top boundary. */\n  constrainRight: boolean,\n  /** Constrain the content at the right boundary. */\n  constrainBottom: boolean,\n  /** Constrain the content at the bottom boundary. */\n  constrainLeft: boolean,\n  children: React.Node,\n\n  render: Render,\n\n  children: React.Node,\n\n  content?: React.ComponentType<ContentProps> | string,\n  tail?: ?React.ComponentType<TailProps>,\n};\n\nexport type State = {\n  containingBlock: Rect,\n  bounds: Rect | null,\n  content: Dimensions | null,\n  contentBorders: Borders | null,\n  tail: Dimensions | null,\n  result: Result,\n};\n"],"file":"types.js"}